@using ru_football
@model ru_football.Models.UserStatsModel

@{
    ViewBag.Title = "user statistic";
}


@using (Html.BeginForm())
{
    @Html.LabelFor(x => x.Name)
    <span>&nbsp;</span>
    @Html.TextBoxFor(x => x.Name, new { style = "width:500px;" });
    <input type="submit" value="submit" />
}

@if (Model != null && Model.Result != null)
{
    <script src="../../Scripts/Chart.js"></script>

    <div style="max-width: 800px; max-height: 400px;">
        <canvas id="myChart" width="800" height="400"></canvas>
    </div>
        <script>
var ctx = document.getElementById("myChart");
var myChart = new Chart(ctx, {
    type: 'line',
    data: {
        labels: [@Html.Raw(string.Join(",", Model.Result.Keys))],
        datasets: [{
            label: '@Model.Name - очки в туре',
            data: [@Html.Raw(string.Join(",", Model.Result.Values.Select(x=>x[Model.Name])))],
            backgroundColor: [
                'rgba(255, 99, 132, 0.2)'
            ],
            borderColor: [
                'rgba(255,99,132,1)'
            ],
            borderWidth: 2
        },
        {
            label: '—реднее кол-во очков в туре',
            data: [@Html.Raw(string.Join(",", Model.Result.Values.Select(x=>x[Calculator.NameForAvg].ToString().Replace(",","."))))],
            backgroundColor: [
                'rgba(0, 99, 132, 0.2)'
            ],
            borderColor: [
                'rgba(0,99,132,1)'
            ],
            borderWidth: 2
        }]
    },
    options: {
        scales: {
            yAxes: [{
                ticks: {
                    beginAtZero:true
                }
            }]
        }
    }
});
    </script>
}